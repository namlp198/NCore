<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:Controls="clr-namespace:NpcCore.Wpf.Controls;assembly=NpcCore.Wpf"
                    xmlns:a="http://schema.Npc.com/wpf/components"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/NpcCore.Wpf;component/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--======================메인메뉴 탭=====================-->
    <!--메인메뉴 > 탭 버튼 베이스 : 토글-->
    <Style x:Key="MainTabMenuToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                x:Name="Bg"
                                Background="#FF293247"
                                CornerRadius="3"
                                Margin="3,0">
                            <ContentPresenter />
                        </Border>
                        <Border Grid.Row="1"
                                x:Name="CheckedBg"
                                Background="#FF465168"
                                CornerRadius="2,2,0,0"
                                Visibility="Collapsed" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#FF323B51" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#FF465168" />
                            <Setter TargetName="Bg"
                                    Property="CornerRadius"
                                    Value="3,3,0,0" />
                            <Setter TargetName="CheckedBg"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--메인메뉴 > 탭 버튼 베이스 : 라디오-->
    <Style x:Key="MainTabMenuRadioButtonStyle"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                x:Name="Bg"
                                Background="#FF293247"
                                CornerRadius="3"
                                Margin="3,0">
                            <ContentPresenter />
                        </Border>
                        <Border Grid.Row="1"
                                x:Name="CheckedBg"
                                Background="#FF465168"
                                CornerRadius="3,3,0,0"
                                Visibility="Collapsed">
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#FF323B51" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#FF465168" />
                            <Setter TargetName="Bg"
                                    Property="CornerRadius"
                                    Value="3,3,0,0" />
                            <Setter TargetName="CheckedBg"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Radio Button for Mark Teaching -->
    <Style x:Key="RadioButtonMarkTeaching_Barcode_Fiducial_BadMarkStyle"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Height"
                Value="18" />
        <Setter Property="Width"
                Value="80" />
        <Setter Property="BorderBrush"
                Value="#576077" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid   Width="{TemplateBinding Height}"
                                    Height="{TemplateBinding Height}">
                                <Canvas>
                                    <Ellipse Name="EllipseMain"
                                             Width="{TemplateBinding Height}"
                                             Height="{TemplateBinding Height}"
                                             Fill="#282e3e"
                                             StrokeThickness="1"
                                             Stroke="{TemplateBinding BorderBrush}" />
                                    <Ellipse Name="CheckMark"
                                             Canvas.Left="5"
                                             Canvas.Top="5"
                                             Opacity="2"
                                             Fill="#ffffff"
                                             Height="8"
                                             Width="8" />
                                </Canvas>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="10,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          Width="{TemplateBinding Width}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0.1"
                                                         To="0.5" />
                                        <ColorAnimation Storyboard.TargetName="EllipseMain"
                                                        Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)"
                                                        To="{TemplateBinding BorderBrush}"
                                                        Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Height"
                                                         Duration="0:0:0.1"
                                                         To="{Binding ElementName=CheckMark, Path=ActualHeight}" />
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Width"
                                                         Duration="0:0:0.1"
                                                         To="{Binding ElementName=CheckMark, Path=ActualWidth}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Height"
                                                         Duration="0:0:0.1"
                                                         To="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Width"
                                                         Duration="0:0:0.1"
                                                         To="0" />
                                        <ColorAnimation Storyboard.TargetName="EllipseMain"
                                                        Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)"
                                                        To="{TemplateBinding BorderBrush}"
                                                        Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="EllipseMain"
                                    Property="Opacity"
                                    Value="0.25" />
                            <Setter TargetName="CheckMark"
                                    Property="Opacity"
                                    Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--메인메뉴 > 탭 사이드 메뉴 버튼-->
    <Style x:Key="MainTabSideMenuToggleButtonStyle"
           TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource MainTabMenuToggleButtonStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Path x:Name="Icon"
                          Data="M0 14v-2h17v2zm0-6V6h17v2zm0-6V0h17v2z"
                          Fill="#FFBFC2C8"
                          Width="17"
                          Height="17"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center" />
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                     Value="True">
                            <Setter TargetName="Icon"
                                    Property="Fill"
                                    Value="#FFC2C4CB" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                     Value="True">
                            <Setter TargetName="Icon"
                                    Property="Fill"
                                    Value="#FFFFFFFF" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--======================메인메뉴 탭=====================-->

    <!--General-->
    <Style x:Key="PopupButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="MinWidth"
                Value="50" />
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Popup.Button.BorderBrush}" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Foreground"
                Value="{DynamicResource Popup.Foreground}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="16">
                        <ContentPresenter x:Name="Content"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="DarkGray" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Content"
                                    Property="Opacity"
                                    Value="0.4" />
                            <Setter Property="BorderBrush"
                                    Value="#FF333333" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>


    <!--ButtonWithoutCornerRadious-->
    <Style x:Key="PopupButtonWithoutCornerRadiousStyle"
           TargetType="{x:Type Button}">
        <Setter Property="MinWidth"
                Value="50" />
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FontSize"
                Value="11" />
        <Setter Property="BorderBrush"
                Value="Black" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="0">
                        <TextBlock   x:Name="Content"
                                     Margin="6 3 10 5"
                                     Text="{TemplateBinding Content}"
                                     FontFamily="{TemplateBinding FontFamily}"
                                     HorizontalAlignment="Left"
                                     Foreground="{TemplateBinding Foreground}"
                                     FontSize="{TemplateBinding FontSize}" />

                        <!--<ContentPresenter x:Name="Content"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="DarkGray" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Content"
                                    Property="Opacity"
                                    Value="0.4" />
                            <Setter Property="BorderBrush"
                                    Value="#FF333333" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="PopupButtonStyle1"
           TargetType="{x:Type Button}">
        <Setter Property="MinWidth"
                Value="50" />
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="Black" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="18">
                        <ContentPresenter x:Name="Content"
                                          Margin="44 7 44 8"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="DarkGray" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Content"
                                    Property="Opacity"
                                    Value="0.4" />
                            <Setter Property="BorderBrush"
                                    Value="#FF333333" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>


    <!--New stype for popup button-->
    <Style x:Key="NewPopupButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="MinWidth"
                Value="50" />
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="Black" />
        <Setter Property="Background"
                Value="#4887d3" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="16">
                        <ContentPresenter x:Name="Content"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#4175b7" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#262f4b" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Content"
                                    Property="Opacity"
                                    Value="0.3" />
                            <Setter Property="BorderBrush"
                                    Value="#FF333333" />
                            <Setter Property="Background"
                                    Value="#4c606679" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="RoundCorner"
           TargetType="{x:Type Button}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Background"
                Value="#222222" />
        <Setter Property="Content"
                Value="" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="16"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Center"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="False">
                            <Setter Property="BorderBrush"
                                    Value="#909090" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="#909090" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#e9e9ec" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <!--<Setter Property="BorderBrush"
                                        Value="#dddddd" />
                            <Setter Property="BorderThickness"
                                        Value="1" />
                            <Setter Property="Background"
                                        Value="#ffffff" />-->
                            <Setter Property="Opacity"
                                    Value="0.4" />
                            <Setter Property="Cursor"
                                    Value="None" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="#909090" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#262f4b" />
                            <Setter Property="Foreground"
                                    Value="#ffffff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RectangleBrowseCornerStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="#222222" />
        <Setter Property="Content"
                Value="" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Center"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="False">
                            <Setter Property="BorderBrush"
                                    Value="#909090" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="#909090" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#e9e9ec" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="BorderBrush"
                                    Value="#dddddd" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="#909090" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#262f4b" />
                            <Setter Property="Foreground"
                                    Value="#ffffff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RectangleBrowseCornerStyle2"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="#222222" />
        <Setter Property="Content"
                Value="" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Center"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="False">
                            <Setter Property="BorderBrush"
                                    Value="#909090" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="#909090" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="Red" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="BorderBrush"
                                    Value="#dddddd" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="#909090" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#262f4b" />
                            <Setter Property="Foreground"
                                    Value="#ffffff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RectanglePresettingStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="#222222" />
        <Setter Property="Content"
                Value="" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="12,0,0,0"
                                          HorizontalAlignment="Left"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="False">
                            <Setter Property="BorderBrush"
                                    Value="#909090" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="#909090" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#e9e9ec" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="BorderBrush"
                                    Value="#dddddd" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="#909090" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="#262f4b" />
                            <Setter Property="Foreground"
                                    Value="#ffffff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundCorner2"
           TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border"
                                CornerRadius="16"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}">
                            <StackPanel Orientation="Horizontal"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                <Image Width="20"
                                       Height="20"
                                       Margin="5,0,5,0"
                                       Source="{DynamicResource IMG_Board_Scan_Button_Pcbinout_N}" />
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  TextElement.Foreground="{TemplateBinding Foreground}" />
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#909090" />
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#e9e9ec" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#262f4b" />
                            <Setter Property="Foreground"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    TargetName="grid"
                                    Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NewJobStepButtonStyle"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="DarkGray" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="DarkGray" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center">
                            <TextBlock Text="{Binding Seq}"
                                       VerticalAlignment="Center" />
                            <TextBlock Text="{Binding Header}"
                                       VerticalAlignment="Center"
                                       Margin="10,0,0,0" />
                        </StackPanel>

                    </Border>

                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MoreButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2">
                        <Image Grid.Column="2"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Source="{DynamicResource IMG_ToolbarMoreIcon}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#676f84" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#ccd8eb" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"
                                   Margin="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MoreButtonStyle2"
           TargetType="{x:Type Button}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2">
                        <Path x:Name="Icon"
                              Data="M7565 20305.5a1.5 1.5 0 1 1 1.5 1.5 1.5 1.5 0 0 1-1.5-1.5zm0-7a1.5 1.5 0 1 1 1.5 1.5 1.5 1.5 0 0 1-1.5-1.5zm0-7a1.5 1.5 0 1 1 1.5 1.5 1.5 1.5 0 0 1-1.5-1.5z"
                              Width="3"
                              Height="17"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="Fill"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#676f84" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#ccd8eb" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"
                                   Margin="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MoreToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2">
                        <Image Grid.Column="2"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Source="{DynamicResource IMG_ToolbarMoreIcon}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#676f84" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#676f84" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"
                                   Margin="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InformationBarMiniMapToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2">
                        <Image Grid.Column="2"
                               x:Name="Img"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Source="{DynamicResource IMG_Board_Setting_Button_Navigator_Off}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="Img"
                                    Value="{DynamicResource IMG_Board_Setting_Button_Navigator_Off_O}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="Img"
                                    Value="{DynamicResource IMG_Board_Setting_Button_Navigator_Off_ON}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"
                                   Margin="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InformationBarZoomToToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2">
                        <Image Grid.Column="2"
                               x:Name="Img"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Source="{DynamicResource IMG_ToolbarZoomToSelectedOff}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="Img"
                                    Value="{DynamicResource IMG_ToolbarZoomToSelectedOffO}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="Img"
                                    Value="{DynamicResource IMG_ToolbarZoomToSelectedOn}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"
                                   Margin="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InformationBarZoomToFitToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2">
                        <Image Grid.Column="2"
                               x:Name="Img"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Source="{DynamicResource IMG_ToolbarZoomToFit}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="Img"
                                    Value="{DynamicResource IMG_ToolbarZoomToFitO}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="Img"
                                    Value="{DynamicResource IMG_ToolbarZoomToFitS}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"
                                   Margin="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RefreshButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--<Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10">
                            <ContentPresenter x:Name="Content" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Gray" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="DarkGray" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Content" Property="Opacity" Value="0.4" />
                                <Setter Property="BorderBrush" Value="#FF333333" />
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    <Image Grid.Column="2"
                           Width="{TemplateBinding Width}"
                           Height="{TemplateBinding Height}"
                           Source="{DynamicResource IMG_Refresh}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"
                                   Margin="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NextStyle"
           TargetType="{x:Type Button}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2">
                        <Image Grid.Column="2"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Source="{DynamicResource IMG_Btn_ChartNext}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#676f84" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#ccd8eb" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"
                                   Margin="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnInfoStyle"
           TargetType="{x:Type Button}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Red" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Path x:Name="Icon"
                          Data="M6695 19226a8 8 0 1 1 8-8 8.01 8.01 0 0 1-8 8zm-.794-9.09a.31.31 0 0 1 .244.1l.01.01c.04.037.161.15 0 .732-.044.164-.159.559-.306 1.055l-.006.021c-.339 1.154-.851 2.9-.962 3.48a1.211 1.211 0 0 0 .19.957.792.792 0 0 0 .621.234 3.087 3.087 0 0 0 1.366-.43 7.175 7.175 0 0 0 1.639-1.342.011.011 0 0 0 0-.01.029.029 0 0 0-.016 0 2.834 2.834 0 0 0-.562.244l-.029.014a5.044 5.044 0 0 1-.914.4.706.706 0 0 1-.15.02.354.354 0 0 1-.3-.127.632.632 0 0 1-.027-.543c.157-.537 1.212-4.187 1.289-4.6l.016-.076a2.617 2.617 0 0 0 .1-1.141.6.6 0 0 0-.569-.4 1.443 1.443 0 0 0-.719.25c-.017.012-1.889 1.3-2.089 1.543-.025.031-.034.051-.029.063s.008.006.018.006a1.982 1.982 0 0 0 .423-.18h.007a3.428 3.428 0 0 1 .556-.242.854.854 0 0 1 .193-.036zm1.792-4.41a1 1 0 1 0 1 1 1 1 0 0 0-.998-1z"
                          Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}"
                          Fill="#878a9a"
                          Stretch="Fill"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Opacity"
                                    Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Opacity"
                                    Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"
                                   Margin="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrevStyle"
           TargetType="{x:Type Button}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2">
                        <Image Grid.Column="2"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Source="{DynamicResource IMG_Btn_ChartPre}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#676f84" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#ccd8eb" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"
                                   Margin="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- New Group Button -->
    <Style x:Key="NewGroupStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="PART_Border"
                            Background="{TemplateBinding Background}">
                        <Path Name="Icon"
                              Stroke="#a3a6b7"
                              StrokeThickness="2"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Path.Data>
                                <PathGeometry>
                                    <PathGeometry.Figures>
                                        <PathFigure StartPoint="0,6">
                                            <LineSegment Point="12,6" />
                                        </PathFigure>
                                        <PathFigure StartPoint="6,0">
                                            <LineSegment Point="6,12" />
                                        </PathFigure>
                                    </PathGeometry.Figures>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="PART_Border"
                                    Value="#676f84" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="PART_Border"
                                    Value="#ccd8eb" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Icon"
                                    Property="Opacity"
                                    Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageContentHoldCheckBoxStyle"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Background="Transparent"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <Path x:Name="Icon"
                              Data="M-2012.971-3240.493a11.744,11.744,0,0,1-2.029-2.493l0,0a13.975,13.975,0,0,1,2.182-2.5,8.837,8.837,0,0,1,5.74-2.508c2.752,0,5.469,1.688,8.075,5.014h0l0,0a12.938,12.938,0,0,1-2.172,2.488,9.148,9.148,0,0,1-5.971,2.493A8.607,8.607,0,0,1-2012.971-3240.493Zm2.471-2.507a3.5,3.5,0,0,0,3.5,3.5,3.5,3.5,0,0,0,3.5-3.5,3.5,3.5,0,0,0-3.5-3.5A3.5,3.5,0,0,0-2010.5-3243Zm1.5,0a2,2,0,0,1,2-2,2,2,0,0,1,2,2,2,2,0,0,1-2,2A2,2,0,0,1-2009-3243Z"
                              Width="16"
                              Height="10"
                              Fill="{TemplateBinding BorderBrush}"
                              Stretch="Fill"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center" />
                        <!--<Image x:Name="Icon" Source="{TemplateBinding Content}" Opacity="0.4"
                               HorizontalAlignment="Center" VerticalAlignment="Center" />-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Fill"
                                    Value="#a3a6b7" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Fill"
                                    Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter TargetName="Icon"
                                    Property="Data"
                                    Value="M2 12.02L14.021 0l.707.707-2.02 2.02A17.083 17.083 0 0 1 16 6.014v.005a13.023 13.023 0 0 1-2.172 2.488A9.147 9.147 0 0 1 7.855 11 7.638 7.638 0 0 1 5 10.439l-2.293 2.289zM8 9a3 3 0 0 0 3-3 2.972 2.972 0 0 0-.286-1.279L6.721 8.714A2.975 2.975 0 0 0 8 9zm-4.835.435a10.723 10.723 0 0 1-1.135-.927A11.732 11.732 0 0 1 0 6.014a13.778 13.778 0 0 1 2.184-2.507A8.84 8.84 0 0 1 7.924 1a7.259 7.259 0 0 1 3 .675L9.3 3.3A2.963 2.963 0 0 0 8 3a3 3 0 0 0-3 3 2.962 2.962 0 0 0 .3 1.3L3.166 9.435zM7.5 7.937L9.937 5.5A2 2 0 0 1 7.5 7.937zm-1.427-1.4a2 2 0 0 1 2.462-2.46L6.074 6.533z"></Setter>
                            <Setter TargetName="Icon"
                                    Property="Fill"
                                    Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Icon"
                                    Property="Width"
                                    Value="16" />
                            <Setter TargetName="Icon"
                                    Property="Height"
                                    Value="12.7" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Icon"
                                    Property="Opacity"
                                    Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageLockCheckBoxStyle"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Background="Transparent"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <StackPanel Orientation="Vertical">
                            <Image x:Name="Icon"
                                   Source="{TemplateBinding Content}"
                                   Opacity="1"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <!--<ControlTemplate.Triggers>
                        -->
                    <!--<Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="#a3a6b7" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>-->
                    <!--
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SyncLockCheckBoxStyle"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border x:Name="Bg"
                            CornerRadius="5"
                            Background="Transparent"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <StackPanel Orientation="Vertical">
                            <Image x:Name="Icon"
                                   Source="{TemplateBinding Content}"
                                   Opacity="1"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="BorderBrush"
                                    Value="{DynamicResource RecipePropertiesItemTextForegroundW1}" />
                            <Setter TargetName="Bg"
                                    Property="BorderThickness"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ImageConnectCheckBoxStyle"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Background="{TemplateBinding Background}">
                        <Image x:Name="Icon"
                               Source="{DynamicResource IMG_ConnectedIcon}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter TargetName="Icon"
                                    Property="Source"
                                    Value="{DynamicResource IMG_DisConnectedIcon}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Source"
                                    Value="{DynamicResource IMG_ConnectedIcon}" />
                        </Trigger>
                        <!--<Trigger Property="IsEnabled"
                                 Value="True">
                            <Setter TargetName="Icon"
                                    Property="Opacity"
                                    Value="0.2" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FileDialogButtonStyle_01"
           TargetType="{x:Type Button}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2">
                        <Image Grid.Column="2"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Source="{DynamicResource IMG_AddFile}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#676f84" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#ccd8eb" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"
                                   Margin="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FileDialogButtonStyle_02"
           TargetType="{x:Type Button}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--<Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10">
                            <ContentPresenter x:Name="Content" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Gray" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="DarkGray" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Content" Property="Opacity" Value="0.4" />
                                <Setter Property="BorderBrush" Value="#FF333333" />
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    <Image Grid.Column="2"
                           Width="{TemplateBinding Width}"
                           Height="{TemplateBinding Height}"
                           Source="{DynamicResource IMG_FileDialog_02}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"
                                   Margin="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Recipe 하단 Cancel 및 Apply버튼 스타일-->
    <Style x:Key="RoundCancelApplyButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="MinWidth"
                Value="120" />
        <Setter Property="MinHeight"
                Value="32" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="BorderBrush"
                Value="White" />
        <Setter Property="Background"
                Value="{DynamicResource RecipeAttributesBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="#ff959595"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10">
                        <ContentPresenter x:Name="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="DarkGray" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Content"
                                    Property="Opacity"
                                    Value="0.4" />
                            <Setter Property="BorderBrush"
                                    Value="#FF333333" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Text="{Binding}"
                                   Margin="0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Teaching Popup FOV Title쪽 Ratio 버튼 스타일 -->
    <Style x:Key="TeachingPopupFOVImageRadioButtonStyleLeft"
           TargetType="{x:Type RadioButton}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Background="#202738">

                        <Border Grid.Row="0"
                                x:Name="Bg"
                                BorderThickness="1"
                                BorderBrush="#465168">
                            <Image Source="{DynamicResource IMG_BW_FOVLive}"
                                   Margin="0 4 0 4"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#FF7E7E8A" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#FF7E7E8A" />
                            <!--<Setter TargetName="Bg" Property="CornerRadius" Value="1,1,0,0" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TeachingPopupFOVRadioButtonStyleLeft"
           TargetType="{x:Type RadioButton}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                x:Name="Bg"
                                Background="#292e3d"
                                BorderThickness="1"
                                BorderBrush="#465168"
                                CornerRadius="3,0,0,3">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#666f83" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#465168" />
                            <!--<Setter TargetName="Bg" Property="CornerRadius" Value="1,1,0,0" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TeachingPopupFOVImageRadioButtonStyleRight"
           TargetType="{x:Type RadioButton}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Background="#202738">

                        <Border Grid.Row="0"
                                x:Name="Bg"
                                BorderThickness="1"
                                BorderBrush="#465168">
                            <Image Source="{DynamicResource IMG_RGB_FOVLive}"
                                   Margin="0 4 0 4"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#FF7E7E8A" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#FF7E7E8A" />
                            <!--<Setter TargetName="Bg" Property="CornerRadius" Value="1,1,0,0" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TeachingPopupFOVRadioButtonStyleRight"
           TargetType="{x:Type RadioButton}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                x:Name="Bg"
                                Background="#292e3d"
                                BorderThickness="1"
                                BorderBrush="#465168"
                                CornerRadius="0,3,3,0">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#666f83" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#465168" />
                            <!--<Setter TargetName="Bg" Property="CornerRadius" Value="1,1,0,0" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Switch Type RadioButton -->
    <Style x:Key="RadioButtonSwitchStyleLeft"
           TargetType="{x:Type RadioButton}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="#72647D" />
        <Setter Property="Background"
                Value="#ffffff" />
        <Setter Property="BorderBrush"
                Value="#61647A" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="Bg"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="3 0 0 3">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#61647A" />
                            <Setter TargetName="Bg"
                                    Property="TextElement.Foreground"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#61647A" />
                            <Setter TargetName="Bg"
                                    Property="TextElement.Foreground"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadioButtonSwitchStyleRight"
           TargetType="{x:Type RadioButton}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="#72647D" />
        <Setter Property="Background"
                Value="#ffffff" />
        <Setter Property="BorderBrush"
                Value="#61647A" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="Bg"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="0 3 3 0">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#61647A" />
                            <Setter TargetName="Bg"
                                    Property="TextElement.Foreground"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#61647A" />
                            <Setter TargetName="Bg"
                                    Property="TextElement.Foreground"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="RadioButtonMarkTeachingStyle"
            TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="White"
                                     Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Height="16"
                                  Width="16">
                                <!--Define size of the Bullet-->
                                <!--The two borders-->
                                <Border Name="RadioOuter"
                                        Background="Transparent"
                                        BorderBrush="Gainsboro"
                                        BorderThickness="2"
                                        CornerRadius="2" />
                                <Border CornerRadius="0"
                                        Margin="4"
                                        Name="RadioMark"
                                        Background="#FFADADAD"
                                        Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <!--Text element-->
                        <TextBlock Margin="3,1,0,0"
                                   Foreground="#FF3E3E3E"
                                   FontFamily="Calibri"
                                   FontSize="12">
                        <ContentPresenter />
                        </TextBlock>
                    </BulletDecorator>
                    <!--If item is checked, trigger the visibility of the mark-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <!--If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting-->
                            <Setter TargetName="RadioMark"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="RadioOuter"
                                    Property="BorderBrush"
                                    Value="#FFADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--====================== SideBar =====================-->

    <Style x:Key="SideBarIconContentControlStyle"
           TargetType="{x:Type ContentControl}">
        <Setter Property="ContentTemplate"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border>
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Start -->
                        <Trigger Property="Content"
                                 Value="start">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarRunImage}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- Test Selected Item -->
                        <Trigger Property="Content"
                                 Value="testSelectedItem">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarSelectTestIcon}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- Test Recipe Turning Item -->
                        <Trigger Property="Content"
                                 Value="RecipeTurn">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarSelectTurnIcon}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- Stop -->
                        <Trigger Property="Content"
                                 Value="runstop">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarRunStopIcon_N}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Content"
                                 Value="stop">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarStopIcon}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- Replay -->
                        <Trigger Property="Content"
                                 Value="replay">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarResetIcon}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- Jump -->
                        <Trigger Property="Content"
                                 Value="jump">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarByPassImage}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- test array -->
                        <Trigger Property="Content"
                                 Value="testArray">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarJumpIcon}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- Whole Board Test -->
                        <Trigger Property="Content"
                                 Value="wholeBoard">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarWholeBoardTest}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- Pcb -->
                        <Trigger Property="Content"
                                 Value="pcb">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarPcbIcon}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- Belt -->
                        <Trigger Property="Content"
                                 Value="belt">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarBeltIcon}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- [NCS-335] : Work In/Out Trigger 추가-->
                        <Trigger Property="Content"
                                 Value="workin">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarBeltIcon}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Content"
                                 Value="workout">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarWorkOutImage}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- [NCS-335] : Flip/OpenFlipper Trigger 추가-->
                        <Trigger Property="Content"
                                 Value="openflipper">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarOpenFlipperImage}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Content"
                                 Value="flip">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarFlipImage}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- Down -->
                        <Trigger Property="Content"
                                 Value="down">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarDownIcon}" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- LiveView -->
                        <Trigger Property="Content"
                                 Value="liveView">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarLiveViewJog}" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- Base Setting -->
                        <Trigger Property="Content"
                                 Value="baseSetting">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarBaseSetting}" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- Array Setting -->
                        <Trigger Property="Content"
                                 Value="arraySetting">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarArraySetting}" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- FOV Opt -->
                        <Trigger Property="Content"
                                 Value="fovOpt">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarFovOpt}" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- More -->
                        <Trigger Property="Content"
                                 Value="More">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarMore}" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- Belt -->
                        <Trigger Property="Content"
                                 Value="refractive">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarRefractiveIcon}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- LightTeaching -->
                        <Trigger Property="Content"
                                 Value="LightTeaching">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarLightTeaching_N}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- MarkTeaching -->
                        <Trigger Property="Content"
                                 Value="MarkTeaching">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarMarkTeacing_N}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- OriginSetting -->
                        <Trigger Property="Content"
                                 Value="OriginSetting">
                            <Setter Property="Width"
                                    Value="40" />
                            <Setter Property="Height"
                                    Value="40" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Image Source="{DynamicResource IMG_SideBarOriginSetting}"
                                                   Width="40"
                                                   Height="40" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SideBarToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bg"
                            CornerRadius="3"
                            BorderThickness="0"
                            BorderBrush="Transparent">
                        <Grid Width="78">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ContentControl Content="{TemplateBinding Tag}"
                                            VerticalAlignment="Top"
                                            Focusable="False"
                                            Style="{DynamicResource SideBarIconContentControlStyle}" />
                            <TextBlock x:Name="ContentText"
                                       Grid.Row="1"
                                       Text="{TemplateBinding Content}"
                                       Foreground="#ffffff"
                                       FontSize="11"
                                       TextAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Width="69"
                                       Height="Auto"
                                       Opacity="0.7"
                                       TextWrapping="WrapWithOverflow">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                         Value="More">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="{DynamicResource SidebarMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="{DynamicResource SidebarSelectedBackground}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="{DynamicResource SidebarBackground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked"
                                           Value="True" />
                                <Condition Property="Tag"
                                           Value="jump" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="{DynamicResource SidebarSelectedBackground}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Bg"
                                    Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--[NCS-335] : 글자 작은 버튼 Style 추가-->
    <Style x:Key="SideBarCommonButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bg"
                            CornerRadius="2"
                            BorderThickness="0"
                            BorderBrush="Transparent">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="30" />
                            </Grid.RowDefinitions>
                            <ContentControl Content="{TemplateBinding Tag}"
                                            VerticalAlignment="Top"
                                            Style="{DynamicResource SideBarIconContentControlStyle}"
                                            Focusable="False" />
                            <TextBlock x:Name="ContentText"
                                       Grid.Row="1"
                                       Text="{TemplateBinding Content}"
                                       Foreground="#ffffff"
                                       FontSize="11"
                                       TextAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Width="69"
                                       Height="Auto"
                                       Opacity="0.7"
                                       TextWrapping="WrapWithOverflow">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                         Value="More">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="{DynamicResource SidebarMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="{DynamicResource SidebarSelectedBackground}" />
                            <!--<Setter TargetName="Bg" Property="Opacity" Value="0.4" />-->
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Bg"
                                    Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SideBarButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Height"
                Value="42" />
        <Setter Property="Margin"
                Value="2,10" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bg"
                            CornerRadius="3"
                            BorderThickness="0"
                            BorderBrush="Transparent">
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center"
                                    Margin="10,0">
                            <ContentControl Content="{TemplateBinding Tag}"
                                            VerticalAlignment="Center"
                                            Style="{DynamicResource SideBarIconContentControlStyle}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="{DynamicResource SidebarBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="{DynamicResource SidebarBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Bg"
                                    Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CCI.CmbToggleButton"
                     TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border  x:Name="Border"
                     Grid.Column="0"
                     Grid.ColumnSpan="2"
                     Background="{TemplateBinding Background}"
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="1"
                     CornerRadius="2" />
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  Fill="#fff"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  Margin="0,12,5,6"
                  Data="M5 6.355l-.008.008L0 1.414 1.425 0 5 3.543 8.573 0 10 1.414 5.01 6.363z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="InspectionPanelNGButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Height"
                Value="25" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bg"
                            CornerRadius="2"
                            BorderThickness="1"
                            BorderBrush="#e83838">
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center"
                                    Margin="10,0">
                            <ContentControl x:Name="text"
                                            Content="Go Review"
                                            VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#fdeaea" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Bg"
                                    Property="Background"
                                    Value="#e83838" />
                            <Setter TargetName="text"
                                    Property="Foreground"
                                    Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ButtonUpViewStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{TemplateBinding ActualWidth}"
                            Height="{TemplateBinding ActualHeight}"
                            Background="{TemplateBinding Background}">
                        <Canvas HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="Red">
                            <StackPanel Orientation="Vertical"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Canvas.Left="15">
                                <Path x:Name="ContentPath1"
                                      Width="10"
                                      Height="5"
                                      Data="M947.625 2922.635l4.655-4.655 4.655 4.655"
                                      Stroke="#ccc"
                                      StrokeThickness="1"
                                      Stretch="Fill"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left" />
                                <Path x:Name="ContentPath2"
                                      Width="10"
                                      Height="5"
                                      Data="M947.625 2922.635l4.655-4.655 4.655 4.655"
                                      Stroke="#ccc"
                                      StrokeThickness="1"
                                      Stretch="Fill"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      Visibility="Visible" />
                            </StackPanel>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content"
                                 Value=">">
                            <Setter TargetName="ContentPath2"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#566077" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#ccd8eb" />
                            <Setter TargetName="ContentPath1"
                                    Property="Stroke"
                                    Value="#222222" />
                            <Setter TargetName="ContentPath2"
                                    Property="Stroke"
                                    Value="#222222" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonDownViewStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{TemplateBinding ActualWidth}"
                            Height="{TemplateBinding ActualHeight}"
                            Background="{TemplateBinding Background}">
                        <Canvas HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="Red">
                            <StackPanel Orientation="Vertical"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Canvas.Left="25">
                                <Path x:Name="ContentPath1"
                                      Width="10"
                                      Height="5"
                                      Data="M947.625 2922.635l4.655-4.655 4.655 4.655"
                                      Stroke="#ccc"
                                      StrokeThickness="1"
                                      Stretch="Fill"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="180" />
                                    </Path.RenderTransform>
                                </Path>
                                <Path x:Name="ContentPath2"
                                      Width="10"
                                      Height="5"
                                      Data="M947.625 2922.635l4.655-4.655 4.655 4.655"
                                      Stroke="#ccc"
                                      StrokeThickness="1"
                                      Stretch="Fill"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      Visibility="Visible">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="180" />
                                    </Path.RenderTransform>
                                </Path>
                            </StackPanel>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content"
                                 Value="&lt;">
                            <Setter TargetName="ContentPath2"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#566077" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#ccd8eb" />
                            <Setter TargetName="ContentPath1"
                                    Property="Stroke"
                                    Value="#222222" />
                            <Setter TargetName="ContentPath2"
                                    Property="Stroke"
                                    Value="#222222" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonCountDowViewStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            Width="{TemplateBinding ActualWidth}"
                            Height="{TemplateBinding ActualHeight}"
                            Background="#4e556a"
                            CornerRadius="2 0 0 2">
                        <Path x:Name="ContentPath1"
                              HorizontalAlignment="Center"
                              Width="10"
                              Height="1"
                              Data="M0 0H18V18H0z"
                              Stroke="#ccc"
                              StrokeThickness="1"
                              Stretch="Fill"
                              VerticalAlignment="Center">
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#676f84" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#ccd8eb" />
                            <Setter TargetName="ContentPath1"
                                    Property="Stroke"
                                    Value="#222222" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="ContentPath1"
                                    Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonDeleteStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Width="{TemplateBinding ActualWidth}"
                            Height="{TemplateBinding ActualHeight}"
                            Background="Transparent"
                            CornerRadius="2">
                        <StackPanel Orientation="Vertical"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Height="30"
                                    Width="30">
                            <Path x:Name="ContentPath2"
                                  HorizontalAlignment="Center"
                                  Margin="0 7 0 0"
                                  Width="5"
                                  Height="1"
                                  Data="M.5 0h13a.5.5 0 0 1 .5.5V1H0V.5A.5.5 0 0 1 .5 0z"
                                  Fill="#878a9a"
                                  Stretch="Fill"
                                  VerticalAlignment="Center">
                            </Path>
                            <Path x:Name="ContentPath3"
                                  HorizontalAlignment="Center"
                                  Margin="0 0 0 1"
                                  Width="14"
                                  Height="1"
                                  Data="M.5 0h4a.5.5 0 0 1 .5.5V2H0V.5A.5.5 0 0 1 .5 0z"
                                  Fill="#878a9a"
                                  Stretch="Fill"
                                  VerticalAlignment="Center">
                            </Path>
                            <Path x:Name="ContentPath1"
                                  HorizontalAlignment="Center"
                                  Width="12"
                                  Height="12"
                                  Data="M3203.24 16871.709h-8.308c-.742 0-1.346-.674-1.346-1.502v-9.498h11v9.498c0 .828-.604 1.502-1.346 1.502zm-1.652-10c-.55 0-1 .447-1 .998v5.002c0 .55.45 1 1 1 .551 0 1-.45 1-1v-5.002c0-.55-.449-.998-1-.998zm-2.502 0c-.551 0-1 .447-1 .998v5.002c0 .55.449 1 1 1 .551 0 1-.45 1-1v-5.002c0-.55-.449-.998-1-.998zm-2.498 0c-.552 0-1 .447-1 .998v5.002c0 .55.448 1 1 1 .55 0 1-.45 1-1v-5.002c0-.55-.45-.998-1-.998z"
                                  Fill="#878a9a"
                                  Stretch="Fill"
                                  VerticalAlignment="Center">
                            </Path>

                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#4c5364" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#606575" />
                            <Setter TargetName="ContentPath1"
                                    Property="Fill"
                                    Value="#ffffff" />
                            <Setter TargetName="ContentPath2"
                                    Property="Fill"
                                    Value="#ffffff" />
                            <Setter TargetName="ContentPath3"
                                    Property="Fill"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="ContentPath1"
                                    Property="Opacity"
                                    Value="0.4" />
                            <Setter TargetName="ContentPath2"
                                    Property="Opacity"
                                    Value="0.4" />
                            <Setter TargetName="ContentPath3"
                                    Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ButtonCountUpViewStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            Width="{TemplateBinding ActualWidth}"
                            Height="{TemplateBinding ActualHeight}"
                            Background="#4e556a"
                            CornerRadius="0 2 2 0">
                        <StackPanel Orientation="Vertical"
                                    VerticalAlignment="Center">
                            <Path x:Name="ContentPath1"
                                  HorizontalAlignment="Center"
                                  Width="10"
                                  Height="1"
                                  Data="M0 0H18V18H0z"
                                  Stroke="#ccc"
                                  StrokeThickness="1"
                                  Stretch="Fill"
                                  VerticalAlignment="Center">
                            </Path>
                            <Path x:Name="ContentPath2"
                                  Margin="10 -10 0 0"
                                  HorizontalAlignment="Center"
                                  Width="10"
                                  Height="1"
                                  Data="M0 0H1V10H0z"
                                  Stroke="#ccc"
                                  StrokeThickness="1"
                                  Stretch="Fill"
                                  VerticalAlignment="Center">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="90" />
                                </Path.RenderTransform>
                            </Path>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#676f84" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#ccd8eb" />
                            <Setter TargetName="ContentPath1"
                                    Property="Stroke"
                                    Value="#222222" />
                            <Setter TargetName="ContentPath2"
                                    Property="Stroke"
                                    Value="#222222" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="ContentPath1"
                                    Property="Opacity"
                                    Value="0.4" />
                            <Setter TargetName="ContentPath2"
                                    Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonDirectionLeftStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            BorderBrush="#465168"
                            BorderThickness="1"
                            Width="{TemplateBinding ActualWidth}"
                            Height="{TemplateBinding ActualHeight}"
                            Background="#4e556a"
                            CornerRadius="2 0 0 2">

                        <StackPanel Orientation="Vertical"
                                    VerticalAlignment="Center">
                            <Path x:Name="ContentPath1"
                                  HorizontalAlignment="Center"
                                  Width="20"
                                  Height="20"
                                  Data="M1217.437 759.6a8.287 8.287 0 0 1 5.342-2.535 7.5 7.5 0 0 1 7.7 7.4 7.831 7.831 0 0 1-1.9 5.046 7.43 7.43 0 0 1-5.2 2.446 8.305 8.305 0 0 1-6.951-3.741"
                                  Stroke="#ccc"
                                  StrokeThickness="1"
                                  Stretch="Fill"
                                  VerticalAlignment="Center">
                            </Path>
                            <Path x:Name="ContentPath2"
                                  Margin="-20 -25 0 0"
                                  HorizontalAlignment="Center"
                                  Width="6.9"
                                  Height="5.7"
                                  Data="M3 0l3 4H0z"
                                  Fill="#ccc"
                                  Stretch="Fill"
                                  VerticalAlignment="Center">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="-33" />
                                </Path.RenderTransform>
                            </Path>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#465168" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#383f52" />
                            <Setter TargetName="ContentPath1"
                                    Property="Stroke"
                                    Value="#878a9a" />
                            <Setter TargetName="ContentPath2"
                                    Property="Stroke"
                                    Value="#878a9a" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="ContentPath1"
                                    Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonDirectionRightStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            BorderBrush="#465168"
                            BorderThickness="1"
                            Width="{TemplateBinding ActualWidth}"
                            Height="{TemplateBinding ActualHeight}"
                            Background="#383f52"
                            CornerRadius="2 0 0 2">
                        <StackPanel Orientation="Vertical"
                                    VerticalAlignment="Center">
                            <Path x:Name="ContentPath1"
                                  HorizontalAlignment="Center"
                                  Width="20"
                                  Height="20"
                                  Margin="32 48 -4 4"
                                  Data="M1 12.356a8.287 8.287 0 0 0 5.342 2.535 7.5 7.5 0 0 0 7.7-7.4 7.831 7.831 0 0 0-1.9-5.046A7.43 7.43 0 0 0 6.951 0 8.305 8.305 0 0 0 0 3.741"
                                  Stroke="#ccc"
                                  StrokeThickness="1"
                                  Stretch="Fill"
                                  VerticalAlignment="Center">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="-165" />
                                </Path.RenderTransform>
                            </Path>
                            <Path x:Name="ContentPath2"
                                  Margin="26 -80 0 0"
                                  HorizontalAlignment="Center"
                                  Width="6.9"
                                  Height="5.7"
                                  Data="M3 0l3 4H0z"
                                  Fill="#ccc"
                                  Stretch="Fill"
                                  VerticalAlignment="Center">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="33" />
                                </Path.RenderTransform>
                            </Path>

                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#465168" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#383f52" />
                            <Setter TargetName="ContentPath1"
                                    Property="Stroke"
                                    Value="#878a9a" />
                            <Setter TargetName="ContentPath2"
                                    Property="Stroke"
                                    Value="#878a9a" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="ContentPath1"
                                    Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonAddLeadGroupViewStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            Width="{TemplateBinding ActualWidth}"
                            Height="{TemplateBinding ActualHeight}"
                            Background="{TemplateBinding Background}">
                        <StackPanel Orientation="Horizontal"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                            <StackPanel Orientation="Vertical"
                                        VerticalAlignment="Center"
                                        Width="30">
                                <Path x:Name="ContentPath1"
                                      HorizontalAlignment="Center"
                                      Width="14"
                                      Height="1"
                                      Data="M0 0H18V18H0z"
                                      Fill="#a3a6b7"
                                      Stretch="Fill"
                                      VerticalAlignment="Center">
                                </Path>
                                <Path x:Name="ContentPath2"
                                      Margin="14 -14 0 0"
                                      HorizontalAlignment="Center"
                                      Width="14"
                                      Height="1"
                                      Data="M0 0H1V10H0z"
                                      Fill="#a3a6b7"
                                      Stretch="Fill"
                                      VerticalAlignment="Center">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="90" />
                                    </Path.RenderTransform>
                                </Path>
                            </StackPanel>
                            <TextBlock x:Name="tb"
                                       Margin="5 0 0 0"
                                       FontSize="14"
                                       Foreground="#a3a6b7"></TextBlock>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#566077" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#ccd8eb" />
                            <Setter TargetName="tb"
                                    Property="Foreground"
                                    Value="#222222" />
                            <Setter TargetName="ContentPath1"
                                    Property="Fill"
                                    Value="#222222" />
                            <Setter TargetName="ContentPath2"
                                    Property="Fill"
                                    Value="#222222" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#32384a" />
                            <Setter TargetName="tb"
                                    Property="Opacity"
                                    Value="0.4" />
                            <Setter TargetName="ContentPath1"
                                    Property="Opacity"
                                    Value="0.4" />
                            <Setter TargetName="ContentPath2"
                                    Property="Opacity"
                                    Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonDefectPatternShowHideStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <BulletDecorator Cursor="Hand">
                        <Border x:Name="bd"
                                BorderBrush="#59658d"
                                BorderThickness="1,1,1,0"
                                CornerRadius="15 15 0 0"
                                Background="#1b212f">
                            <Image x:Name="Img"
                                   Source="{DynamicResource IMG_IC_BottomFoldCloseUpN}"
                                   Margin="0,0,0,5"
                                   Height="24"
                                   Width="24" />
                        </Border>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="Img"
                                    Property="Source"
                                    Value="{DynamicResource IMG_IC_BottomFoldCloseN}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="bd"
                                    Property="Background"
                                    Value="#4C465168" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="bd"
                                    Property="Background"
                                    Value="#33FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}"
           x:Key="ReviewAttributesRadioButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="Border"
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="12"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}">
                        <TextBlock x:Name="Content"
                                   Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   FontSize="13"
                                   FontFamily="SegoeUI"
                                   FontWeight="Normal"
                                   Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#465168" />
                            <Setter TargetName="Content"
                                    Property="FontWeight"
                                    Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#363d50" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="PrevPageButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="Transparent"
                            CornerRadius="12">
                        <Path x:Name="Icon"
                              Data="M-6840.7-17100l-6 6 6 6"
                              Stroke="#878a9a"
                              StrokeThickness="2"
                              Width="6"
                              Height="12"
                              Stretch="Fill"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#19FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#33FFFFFF" />
                            <Setter TargetName="Icon"
                                    Property="Stroke"
                                    Value="#ffffff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="NextPageButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="Transparent"
                            CornerRadius="12">
                        <Path x:Name="Icon"
                              Data="M-6840.7-17100l-6 6 6 6"
                              Stroke="#878a9a"
                              StrokeThickness="2"
                              Width="6"
                              Height="12"
                              Stretch="Fill"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform X="6"
                                                        Y="12" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#19FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#33FFFFFF" />
                            <Setter TargetName="Icon"
                                    Property="Stroke"
                                    Value="#ffffff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SetPackageSelectButtonStyle"
           TargetType="Button">
        <Setter Property="Background"
                Value="White" />
        <Setter Property="TextBlock.TextAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            CornerRadius="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#465168" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#566077" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#465168" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#ccd8eb" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#465168" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="Black" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FFBCDDEE" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF245A83" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    TargetName="border"
                                    Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ApplyRecipeButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            CornerRadius="16"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="Center"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#7fabe1" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Border"
                                    Property="Opacity"
                                    Value="0.2" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#606679" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#ccd8eb" />
                            <Setter TargetName="contentPresenter"
                                    Property="TextBlock.Foreground"
                                    Value="#222222" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Left Button(s) Template -->
    <ControlTemplate x:Key="UVButtonStyle"
                     TargetType="{x:Type ToggleButton}">
        <Border Name="Border"
                Background="#00465168"
                BorderBrush="#465168"
                BorderThickness="1 1 0 1"
                CornerRadius="2, 0, 0, 2">
            <TextBlock x:Name="Content"
                       Text="UV"
                       Cursor="Hand"
                       FontSize="13"
                       FontFamily="SegoeUI"
                       FontWeight="Normal"
                       Foreground="#606679"
                       UseLayoutRounding="True"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#465168" />
                <Setter TargetName="Content"
                        Property="FontWeight"
                        Value="Bold" />
                <Setter TargetName="Content"
                        Property="Foreground"
                        Value="#2bb5ff" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="Border"
                            Property="Background"
                            Value="#7F465168" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Right Button Template -->
    <ControlTemplate x:Key="WButtonStyle"
                     TargetType="{x:Type ToggleButton}">
        <Border Name="Border"
                Background="#00465168"
                BorderBrush="#465168"
                BorderThickness="0 1 1 1"
                CornerRadius="0, 2, 2, 0">
            <TextBlock x:Name="Content"
                       Text="W"
                       Cursor="Hand"
                       FontSize="13"
                       FontFamily="SegoeUI"
                       FontWeight="Normal"
                       Foreground="#606679"
                       UseLayoutRounding="True"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#465168" />
                <Setter TargetName="Content"
                        Property="FontWeight"
                        Value="Bold" />
                <Setter TargetName="Content"
                        Property="Foreground"
                        Value="#2bb5ff" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="Border"
                            Property="Background"
                            Value="#7F465168" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Left Button(s) Template -->
    <ControlTemplate x:Key="DefectModeButtonStyle"
                     TargetType="{x:Type ToggleButton}">
        <Border Name="Border"
                Background="#00465168"
                BorderBrush="#465168"
                BorderThickness="1 1 0 1"
                CornerRadius="2, 0, 0, 2">
            <Image x:Name="Icon"
                   Source="{DynamicResource IMG_DefectMode_Icon}"
                   Width="20"
                   Height="20"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#465168" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="Border"
                            Property="Background"
                            Value="#7F465168" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Right Button Template -->
    <ControlTemplate x:Key="HeightmapModeButtonStyle"
                     TargetType="{x:Type ToggleButton}">
        <Border Name="Border"
                Background="#00465168"
                BorderBrush="#465168"
                BorderThickness="0 1 1 1"
                CornerRadius="0, 2, 2, 0">
            <Image x:Name="Icon"
                   Source="{DynamicResource IMG_HeightmapMode_Icon}"
                   Width="20"
                   Height="20"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#465168" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="Border"
                            Property="Background"
                            Value="#7F465168" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="RadioButtonStyle"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Height"
                Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid Height="18"
                                  Width="18">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Ellipse Name="EllipseMain"
                                         Width="18"
                                         Height="18"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="4"
                                         Grid.Row="0"
                                         Grid.RowSpan="4"
                                         Fill="{TemplateBinding Background}"
                                         StrokeThickness="1"
                                         Stroke="{TemplateBinding BorderBrush}" />
                                <Ellipse Name="CheckMark"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="4"
                                         Grid.Row="0"
                                         Grid.RowSpan="4"
                                         Opacity="1"
                                         Fill="#ffffff"
                                         Height="10"
                                         Width="10" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="5,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          Width="{TemplateBinding Width}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0.3"
                                                         To="0.5" />
                                        <ColorAnimation Storyboard.TargetName="EllipseMain"
                                                        Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)"
                                                        To="{TemplateBinding BorderBrush}"
                                                        Duration="0:0:0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Height"
                                                         Duration="0:0:0.3"
                                                         To="{Binding ElementName=CheckMark, Path=ActualHeight}" />
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Width"
                                                         Duration="0:0:0.3"
                                                         To="{Binding ElementName=CheckMark, Path=ActualWidth}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Height"
                                                         Duration="0:0:0.2"
                                                         To="0" />
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Width"
                                                         Duration="0:0:0.2"
                                                         To="0" />
                                        <ColorAnimation Storyboard.TargetName="EllipseMain"
                                                        Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)"
                                                        To="{TemplateBinding BorderBrush}"
                                                        Duration="0:0:0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="EllipseMain"
                                    Property="Stroke"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="EllipseMain"
                                    Property="Opacity"
                                    Value="0.25" />
                            <Setter TargetName="CheckMark"
                                    Property="Opacity"
                                    Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilterChartToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="ClearFilterButton"
                            BorderThickness="0"
                            Background="#924eff"
                            CornerRadius="13">
                        <Grid VerticalAlignment="Center"
                              HorizontalAlignment="Left"
                              Height="12"
                              Margin="10 3 0 3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="12" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Path             x:Name="Path1"
                                                  Fill="#fff"
                                                  Grid.Row="0"
                                                  Opacity="0.8"
                                                  Width="12"
                                                  Height="2"
                                                  VerticalAlignment="Top"
                                                  Data="M0 0H11.25V1.5H0z" />
                                <Path             x:Name="Path2"
                                                  Fill="#fff"
                                                  Grid.Row="1"
                                                  Opacity="0.8"
                                                  Width="7"
                                                  HorizontalAlignment="Left"
                                                  Height="2"
                                                  VerticalAlignment="Top"
                                                  Data="M0 0H11.25V1.5H0z" />
                                <Path             x:Name="Path3"
                                                  Fill="#fff"
                                                  Grid.Row="2"
                                                  Opacity="0.8"
                                                  Width="4"
                                                  HorizontalAlignment="Left"
                                                  Height="2"
                                                  VerticalAlignment="Top"
                                                  Data="M0 0H11.25V1.5H0z" />
                                <Path x:Name="Path"
                                      Grid.Row="1"
                                      Grid.RowSpan="2"
                                      Fill="#fff"
                                      Opacity="0.8"
                                      Width="4"
                                      Height="8"
                                      HorizontalAlignment="Right"
                                      Stretch="Fill"
                                      Margin="0,0,0,0"
                                      Data="M138.584 346.642h-5.25l2.034 3.431v2.483l1.183-1.053v-1.43z" />
                            </Grid>
                            <TextBlock x:Name="ClearFilterText"
                                       Grid.Column="1"
                                       VerticalAlignment="Center"
                                       Text="Clear Filter"
                                       Margin="6 0 0 0"
                                       FontSize="12"
                                       Foreground="#fff" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ClearFilterButton"
                                    Property="Background"
                                    Value="#c29cff" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ClearFilterButton"
                                    Property="Background"
                                    Value="#eee6ff" />
                            <Setter TargetName="Path1"
                                    Property="Fill"
                                    Value="#222222" />
                            <Setter TargetName="Path"
                                    Property="Fill"
                                    Value="#222222" />
                            <Setter TargetName="Path2"
                                    Property="Fill"
                                    Value="#222222" />
                            <Setter TargetName="Path3"
                                    Property="Fill"
                                    Value="#222222" />
                            <Setter TargetName="ClearFilterText"
                                    Property="Foreground"
                                    Value="#222222" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="ClearFilterButton"
                                    Property="Background"
                                    Value="#4e556a" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IncreaseRangeButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--<Border x:Name="Border" CornerRadius="16"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">-->
                    <Image x:Name="Icon"
                           Source="{DynamicResource IMG_Range}"
                           Width="20"
                           Height="20"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                    <!--</Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#7fabe1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.2"/>
                            <Setter TargetName="Border" Property="Background" Value="#606679" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#ccd8eb" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DecreaseRangeButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image x:Name="Icon"
                           Source="{DynamicResource IMG_Reverse}"
                           Width="20"
                           Height="20"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#7fabe1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.2"/>
                            <Setter TargetName="Border" Property="Background" Value="#606679" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#ccd8eb" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RangeAndReverseButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--<Border x:Name="Border" CornerRadius="16"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">-->
                    <Image x:Name="Icon"
                           Source="{DynamicResource IMG_Range_Reverse}"
                           Width="20"
                           Height="20"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                    <!--</Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#7fabe1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.2"/>
                            <Setter TargetName="Border" Property="Background" Value="#606679" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#ccd8eb" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border"
                                CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource DoubleToMultiplicationConverter}, ConverterParameter=0.5}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}">
                            <StackPanel Orientation="Horizontal"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                <Image x:Name="img"
                                       Width="20"
                                       Height="20"
                                       Margin="5,0,5,0"
                                       Visibility="Collapsed" />
                                <ContentPresenter x:Name="content"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  TextElement.Foreground="{TemplateBinding Foreground}" />
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag"
                                 Value="CreateRecipe">
                            <Setter TargetName="img"
                                    Property="Visibility"
                                    Value="Visible" />
                            <!--<Setter TargetName="img" Property="Width" Value="50"/>-->
                            <!--<Setter TargetName="img" Property="Height" Value="50"/>-->
                            <!--<Setter TargetName="img" Property="Source" Value="{DynamicResource IMG_IC_OPEN_RECIPE_N}"/>-->
                            <Setter TargetName="content"
                                    Property="TextElement.FontSize"
                                    Value="24" />
                        </Trigger>
                        <Trigger Property="Tag"
                                 Value="OpenRecipe">
                            <Setter TargetName="img"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="img"
                                    Property="Width"
                                    Value="50" />
                            <Setter TargetName="img"
                                    Property="Height"
                                    Value="50" />
                            <Setter TargetName="img"
                                    Property="Source"
                                    Value="{DynamicResource IMG_IC_OPEN_RECIPE_N}" />
                            <Setter TargetName="content"
                                    Property="TextElement.FontSize"
                                    Value="24" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#909090" />
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#e9e9ec" />
                            <Setter TargetName="content"
                                    Property="TextElement.Foreground"
                                    Value="#262f4b" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#262f4b" />
                            <Setter Property="Foreground"
                                    Value="#ffffff" />
                            <Setter TargetName="content"
                                    Property="TextElement.Foreground"
                                    Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    TargetName="grid"
                                    Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RotateSpareButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2">
                        <Image Grid.Column="2"
                               x:Name="Img"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Source="{DynamicResource IMG_Btn_SquareNormal}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="Img"
                                    Value="{DynamicResource IMG_Btn_SquareMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Source"
                                    TargetName="Img"
                                    Value="{DynamicResource IMG_Btn_SquareSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>